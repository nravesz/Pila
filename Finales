Primer final, Primer cuatrimestre 2013, cátedra Wachenchauzer

1)
#include <stdio.h>
#include <string.h>
#include <ctype.h>

void contar_palabras(char cadena[]){
    int contador = 0;
    int i;
    int largo = strlen(cadena);
    for(i=0;i<largo;i++){
        if (cadena[i] != ' ' && cadena[i+1] == ' ' || cadena[i] != ' ' && cadena[i+1] == '\0'){
            contador ++;
        }
    }
    printf("Cantidad de palabras: %d",contador);
}

int main(){
    char cadena[] = "hola  hola";
    contar_palabras(cadena);
    return 0;
}

#include <stdio.h>
#include <string.h>
#include <ctype.h>

void contar_palabras(char cadena[]){
    int contador = 0;
    int i;
    int largo = strlen(cadena);
    for(i=0;i<largo;i++){
        if (cadena[i] != ' ' && cadena[i+1] == ' ' || cadena[i] != ' ' && cadena[i+1] == '\0'){
            contador ++;
        }
    }
    printf("Cantidad de palabras: %d",contador);
}

int main(){
    char cadena[] = "hola  hola";
    contar_palabras(cadena);
    return 0;
}

3)
def remover_no_crecientes_consecutivos(pila):
    aux = Pila()
    while not pila.esta_vacia():
        aux.apilar(pila.desapilar())
    pila.apilar(aux.desapilar())
    while not aux.esta_vacia():
        act = pila.desapilar()
        pila.apilar(act)
        prox = aux.desapilar()
        if act<prox:
            pila.apilar(prox)

remover_no_crecientes_consecutivos(a)

4)
class Polinomio:
    def __init__(self,coeficientes):
        self.coeficientes = coeficientes
    def __str__(self):
        return str(self.coeficientes)
    def suma(self,otro):
        nuevo = []
        a = self.coeficientes[::-1]
        b = otro.coeficientes[::-1]
        largo_a = 0
        largo_b = 0
        while largo_a!=len(a) and largo_b!=len(b):
            coef = a[largo_a] + b[largo_b]
            largo_a += 1
            largo_b += 1
            nuevo.append(coef)
        if largo_a!=len(a):
            nuevo = nuevo + a[largo_a::]
        elif largo_b!=len(b):
            nuevo = nuevo + b[largo_b::]
        return Polinomio(nuevo[::-1])

Primer final, Primer cuatrimestre 2014, cátedra Wachenchauzer

4)
#include <stdio.h>
#include <string.h>

void todo_con_e(char cadena[]){
    int i,j;
    char vocales[4] = "aiou";
    int largo = strlen(cadena);
    for (i=0;i<largo;i++){
        for (j=0;j<4;j++){
            if (cadena[i] == vocales[j]){
                printf("e");
                break;
            }
            else{
                printf("%c",cadena[i]);
                break;
            }
        }
    }
}

int main(){
    char cadena[] = "mostrar tres palabras";
    todo_con_e(cadena);
    return 0;
}

Segundo final, Primer cuatrimestre 2014, cátedra Wachenchauzer
1)
def es_mismo_conjunto(a,b):
    """Recibe dos listas de string. Devuelve True o False dependiendo si todos los elementos de a se encuentran en b y viceversa"""
    for letra in a:
        if not letra in b:
            return False
    for letra in b:
        if not letra in a:
            return False
    return True

4)
#include <stdio.h>
#include <string.h>

void intercalar_texto(char cad1[],char cad2[]){
    int len1 = strlen(cad1);
    int len2 = strlen(cad2);
    int contador1 = 0;
    int contador2 = 0;
    while (contador1!=len1 && contador2!=len2){
        printf("%c%c",cad1[contador1],cad2[contador2]);
        contador1++;
        contador2++;
    }
    if (contador1!=len1){
        while (contador1!=len1){
            printf("%c",cad1[contador1]);
            contador1++;
        }
    }
    if (contador2!=len2){
        while (contador1!=len1){
            printf("%c",cad2[contador2]);
            contador2++;
        }
    }
}

int main(){
    char a[] = "_ola";
    char b[] = "Boeno";
    intercalar_texto(a,b);
    return 0;
}

Cuarta fecha 2014
2)
def suma_recursiva(lista):
    if len(lista) == 0:
        return 0
    else:
        n = lista.pop()
        suma = n + suma_recursiva(lista)
        lista.append(n)
        return suma

4)
#include <stdio.h>
#include <string.h>
#include <ctype.h>

void imprimir_titulo(char cadena[]){
    int largo = strlen(cadena);
    int i;
    printf("%c",toupper(cadena[0]));
    for(i=1;i<largo;i++){
        if (cadena[i-1]==' ' && cadena[i]!=' '){
            printf("%c",toupper(cadena[i]));
        }
        else{
            printf("%c",cadena[i]);
        }
    }
}

int main(){
    char cadena[] = "yuri on ice";
    imprimir_titulo(cadena);
    return 0;
}

Finales_1
1)
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

void imprimir_array_invertido(int numeros[],int i){
    for (i; i>=0;i--){
        printf("%d\n",numeros[i]);
    }
}

int main(){
    int numeros[] = {1,2,3,4,5,6,7,8,9,10};
    int i = sizeof(numeros)/sizeof(int);
    imprimir_array_invertido(numeros,i);
    return 0;
}

3)
def histograma(cadena):
    dic = {}
    for c in cadena:
        if not c in dic.keys():
            dic[c] = 1
        else:
            dic[c] = dic.get(c,0) + 1
    return dic

4)
class Seq:
    def __init__(self,data):
        self.data = data
    def __str__(self):
        return str(self.data)
    def count(self,item):
        contador = 0
        for c in self.data:
            if c.lower()==item.lower():
                contador += 1
        return contador